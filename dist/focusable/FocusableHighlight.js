var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.FocusableHighlight=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _this=this,_jsxFileName="/Users/rinaldo/Documents/React-native/npm-package/RTSAppTv/src/lib/focusable/FocusableHighlight.js";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var FocusableHighlight=(0,_react.memo)((0,_react.forwardRef)(function(props,ref){var _useState=(0,_react.useState)(false),_useState2=(0,_slicedToArray2.default)(_useState,2),focused=_useState2[0],setFocused=_useState2[1];return _react.default.createElement(_reactNative.TouchableHighlight,(0,_extends2.default)({},props,{ref:ref,onPress:function onPress(event){setFocused(true);if(props.onPress){props.onPress(event);}},onFocus:function onFocus(event){setFocused(true);if(props.onFocus){props.onFocus(event);}},onBlur:function onBlur(event){setFocused(false);if(props.onBlur){props.onBlur(event);}},style:[props.style,focused&&{backgroundColor:props.underlayColor,opacity:props.activeOpacity},focused&&props.styleFocused],__self:_this,__source:{fileName:_jsxFileName,lineNumber:9,columnNumber:9}}),props.children||_react.default.createElement(_reactNative.View,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:38,columnNumber:32}}));}));exports.FocusableHighlight=FocusableHighlight;